Rules useless in parser due to conflicts

   19 $@2: ε


State 75 conflicts: 1 shift/reduce
State 85 conflicts: 11 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: prints ';'
    5          | printd ';'
    6          | assignment ';'
    7          | var_declaration ';'
    8          | if_statement
    9          | for_statement
   10          | while_statement
   11          | function_definition
   12          | function_call ';'
   13          | return_statement ';'
   14          | compound_statement

   15 compound_statement: '{' statements '}'
   16                   | '{' '}'

   17 $@1: ε

   18 if_statement: tok_if '(' conditional_expression ')' $@1 statement

   19 $@2: ε

   20 $@3: ε

   21 if_statement: tok_if '(' conditional_expression ')' $@2 statement tok_else $@3 statement

   22 $@4: ε

   23 for_statement: tok_for '(' assignment ';' conditional_expression ';' assignment ')' $@4 statement

   24 $@5: ε

   25 for_statement: tok_for '(' var_declaration ';' conditional_expression ';' assignment ')' $@5 statement

   26 $@6: ε

   27 while_statement: tok_while '(' conditional_expression ')' $@6 statement

   28 $@7: ε

   29 function_definition: type_specifier tok_identifier '(' param_list ')' $@7 compound_statement

   30 param_list: ε
   31           | param
   32           | param_list ',' param

   33 param: type_specifier tok_identifier

   34 function_call: tok_identifier '(' call_args ')'

   35 call_args: ε
   36          | call_arg
   37          | call_args ',' call_arg

   38 call_arg: expression

   39 return_statement: tok_return expression
   40                 | tok_return

   41 var_declaration: type_specifier tok_identifier
   42                | type_specifier tok_identifier '=' expression

   43 type_specifier: tok_int
   44               | tok_double
   45               | tok_void

   46 prints: tok_prints '(' tok_string_literal ')'

   47 printd: tok_printd '(' term ')'

   48 term: tok_identifier
   49     | tok_double_literal
   50     | function_call

   51 assignment: tok_identifier '=' expression

   52 expression: term
   53           | expression '+' expression
   54           | expression '-' expression
   55           | expression '/' expression
   56           | expression '*' expression
   57           | '(' expression ')'

   58 conditional_expression: expression
   59                       | expression '<' expression
   60                       | expression '>' expression
   61                       | expression LE expression
   62                       | expression GE expression
   63                       | expression EQ expression
   64                       | expression NE expression
   65                       | conditional_expression AND conditional_expression
   66                       | conditional_expression OR conditional_expression
   67                       | '(' conditional_expression ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 18 21 23 25 27 29 34 46 47 57 67
    ')' (41) 18 21 23 25 27 29 34 46 47 57 67
    '*' (42) 56
    '+' (43) 53
    ',' (44) 32 37
    '-' (45) 54
    '/' (47) 55
    ';' (59) 4 5 6 7 12 13 23 25
    '<' (60) 59
    '=' (61) 42 51
    '>' (62) 60
    '{' (123) 15 16
    '}' (125) 15 16
    error (256)
    tok_printd (258) 47
    tok_prints (259) 46
    tok_if (260) 18 21
    tok_else (261) 21
    tok_for (262) 23 25
    tok_while (263) 27
    tok_return (264) 39 40
    tok_int (265) 43
    tok_double (266) 44
    tok_void (267) 45
    tok_identifier <identifier> (268) 29 33 34 41 42 48 51
    tok_double_literal <double_literal> (269) 49
    tok_string_literal <string_literal> (270) 46
    LE (271) 61
    GE (272) 62
    EQ (273) 63
    NE (274) 64
    AND (275) 65
    OR (276) 66
    THEN (277)


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program (37)
        on left: 1
        on right: 0
    statements (38)
        on left: 2 3
        on right: 1 3 15
    statement (39)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2 3 18 21 23 25 27
    compound_statement (40)
        on left: 15 16
        on right: 14 29
    if_statement (41)
        on left: 18 21
        on right: 8
    $@1 (42)
        on left: 17
        on right: 18
    $@2 (43)
        on left: 19
        on right: 21
    $@3 (44)
        on left: 20
        on right: 21
    for_statement (45)
        on left: 23 25
        on right: 9
    $@4 (46)
        on left: 22
        on right: 23
    $@5 (47)
        on left: 24
        on right: 25
    while_statement (48)
        on left: 27
        on right: 10
    $@6 (49)
        on left: 26
        on right: 27
    function_definition (50)
        on left: 29
        on right: 11
    $@7 (51)
        on left: 28
        on right: 29
    param_list <value> (52)
        on left: 30 31 32
        on right: 29 32
    param <value> (53)
        on left: 33
        on right: 31 32
    function_call <value> (54)
        on left: 34
        on right: 12 50
    call_args <value> (55)
        on left: 35 36 37
        on right: 34 37
    call_arg <value> (56)
        on left: 38
        on right: 36 37
    return_statement (57)
        on left: 39 40
        on right: 13
    var_declaration <value> (58)
        on left: 41 42
        on right: 7 25
    type_specifier <type_name> (59)
        on left: 43 44 45
        on right: 29 33 41 42
    prints (60)
        on left: 46
        on right: 4
    printd (61)
        on left: 47
        on right: 5
    term <value> (62)
        on left: 48 49 50
        on right: 47 52
    assignment <value> (63)
        on left: 51
        on right: 6 23 25
    expression <value> (64)
        on left: 52 53 54 55 56 57
        on right: 38 39 42 51 53 54 55 56 57 58 59 60 61 62 63 64
    conditional_expression <value> (65)
        on left: 58 59 60 61 62 63 64 65 66 67
        on right: 18 21 23 25 27 65 66 67


State 0

    0 $accept: • program $end

    tok_printd      shift, and go to state 1
    tok_prints      shift, and go to state 2
    tok_if          shift, and go to state 3
    tok_for         shift, and go to state 4
    tok_while       shift, and go to state 5
    tok_return      shift, and go to state 6
    tok_int         shift, and go to state 7
    tok_double      shift, and go to state 8
    tok_void        shift, and go to state 9
    tok_identifier  shift, and go to state 10
    '{'             shift, and go to state 11

    program              go to state 12
    statements           go to state 13
    statement            go to state 14
    compound_statement   go to state 15
    if_statement         go to state 16
    for_statement        go to state 17
    while_statement      go to state 18
    function_definition  go to state 19
    function_call        go to state 20
    return_statement     go to state 21
    var_declaration      go to state 22
    type_specifier       go to state 23
    prints               go to state 24
    printd               go to state 25
    assignment           go to state 26


State 1

   47 printd: tok_printd • '(' term ')'

    '('  shift, and go to state 27


State 2

   46 prints: tok_prints • '(' tok_string_literal ')'

    '('  shift, and go to state 28


State 3

   18 if_statement: tok_if • '(' conditional_expression ')' $@1 statement
   21             | tok_if • '(' conditional_expression ')' $@2 statement tok_else $@3 statement

    '('  shift, and go to state 29


State 4

   23 for_statement: tok_for • '(' assignment ';' conditional_expression ';' assignment ')' $@4 statement
   25              | tok_for • '(' var_declaration ';' conditional_expression ';' assignment ')' $@5 statement

    '('  shift, and go to state 30


State 5

   27 while_statement: tok_while • '(' conditional_expression ')' $@6 statement

    '('  shift, and go to state 31


State 6

   39 return_statement: tok_return • expression
   40                 | tok_return •

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    $default  reduce using rule 40 (return_statement)

    function_call  go to state 35
    term           go to state 36
    expression     go to state 37


State 7

   43 type_specifier: tok_int •

    $default  reduce using rule 43 (type_specifier)


State 8

   44 type_specifier: tok_double •

    $default  reduce using rule 44 (type_specifier)


State 9

   45 type_specifier: tok_void •

    $default  reduce using rule 45 (type_specifier)


State 10

   34 function_call: tok_identifier • '(' call_args ')'
   51 assignment: tok_identifier • '=' expression

    '('  shift, and go to state 38
    '='  shift, and go to state 39


State 11

   15 compound_statement: '{' • statements '}'
   16                   | '{' • '}'

    tok_printd      shift, and go to state 1
    tok_prints      shift, and go to state 2
    tok_if          shift, and go to state 3
    tok_for         shift, and go to state 4
    tok_while       shift, and go to state 5
    tok_return      shift, and go to state 6
    tok_int         shift, and go to state 7
    tok_double      shift, and go to state 8
    tok_void        shift, and go to state 9
    tok_identifier  shift, and go to state 10
    '{'             shift, and go to state 11
    '}'             shift, and go to state 40

    statements           go to state 41
    statement            go to state 14
    compound_statement   go to state 15
    if_statement         go to state 16
    for_statement        go to state 17
    while_statement      go to state 18
    function_definition  go to state 19
    function_call        go to state 20
    return_statement     go to state 21
    var_declaration      go to state 22
    type_specifier       go to state 23
    prints               go to state 24
    printd               go to state 25
    assignment           go to state 26


State 12

    0 $accept: program • $end

    $end  shift, and go to state 42


State 13

    1 program: statements •
    3 statements: statements • statement

    tok_printd      shift, and go to state 1
    tok_prints      shift, and go to state 2
    tok_if          shift, and go to state 3
    tok_for         shift, and go to state 4
    tok_while       shift, and go to state 5
    tok_return      shift, and go to state 6
    tok_int         shift, and go to state 7
    tok_double      shift, and go to state 8
    tok_void        shift, and go to state 9
    tok_identifier  shift, and go to state 10
    '{'             shift, and go to state 11

    $default  reduce using rule 1 (program)

    statement            go to state 43
    compound_statement   go to state 15
    if_statement         go to state 16
    for_statement        go to state 17
    while_statement      go to state 18
    function_definition  go to state 19
    function_call        go to state 20
    return_statement     go to state 21
    var_declaration      go to state 22
    type_specifier       go to state 23
    prints               go to state 24
    printd               go to state 25
    assignment           go to state 26


State 14

    2 statements: statement •

    $default  reduce using rule 2 (statements)


State 15

   14 statement: compound_statement •

    $default  reduce using rule 14 (statement)


State 16

    8 statement: if_statement •

    $default  reduce using rule 8 (statement)


State 17

    9 statement: for_statement •

    $default  reduce using rule 9 (statement)


State 18

   10 statement: while_statement •

    $default  reduce using rule 10 (statement)


State 19

   11 statement: function_definition •

    $default  reduce using rule 11 (statement)


State 20

   12 statement: function_call • ';'

    ';'  shift, and go to state 44


State 21

   13 statement: return_statement • ';'

    ';'  shift, and go to state 45


State 22

    7 statement: var_declaration • ';'

    ';'  shift, and go to state 46


State 23

   29 function_definition: type_specifier • tok_identifier '(' param_list ')' $@7 compound_statement
   41 var_declaration: type_specifier • tok_identifier
   42                | type_specifier • tok_identifier '=' expression

    tok_identifier  shift, and go to state 47


State 24

    4 statement: prints • ';'

    ';'  shift, and go to state 48


State 25

    5 statement: printd • ';'

    ';'  shift, and go to state 49


State 26

    6 statement: assignment • ';'

    ';'  shift, and go to state 50


State 27

   47 printd: tok_printd '(' • term ')'

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33

    function_call  go to state 35
    term           go to state 51


State 28

   46 prints: tok_prints '(' • tok_string_literal ')'

    tok_string_literal  shift, and go to state 52


State 29

   18 if_statement: tok_if '(' • conditional_expression ')' $@1 statement
   21             | tok_if '(' • conditional_expression ')' $@2 statement tok_else $@3 statement

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 53

    function_call           go to state 35
    term                    go to state 36
    expression              go to state 54
    conditional_expression  go to state 55


State 30

   23 for_statement: tok_for '(' • assignment ';' conditional_expression ';' assignment ')' $@4 statement
   25              | tok_for '(' • var_declaration ';' conditional_expression ';' assignment ')' $@5 statement

    tok_int         shift, and go to state 7
    tok_double      shift, and go to state 8
    tok_void        shift, and go to state 9
    tok_identifier  shift, and go to state 56

    var_declaration  go to state 57
    type_specifier   go to state 58
    assignment       go to state 59


State 31

   27 while_statement: tok_while '(' • conditional_expression ')' $@6 statement

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 53

    function_call           go to state 35
    term                    go to state 36
    expression              go to state 54
    conditional_expression  go to state 60


State 32

   34 function_call: tok_identifier • '(' call_args ')'
   48 term: tok_identifier •

    '('  shift, and go to state 38

    $default  reduce using rule 48 (term)


State 33

   49 term: tok_double_literal •

    $default  reduce using rule 49 (term)


State 34

   57 expression: '(' • expression ')'

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 61


State 35

   50 term: function_call •

    $default  reduce using rule 50 (term)


State 36

   52 expression: term •

    $default  reduce using rule 52 (expression)


State 37

   39 return_statement: tok_return expression •
   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65

    $default  reduce using rule 39 (return_statement)


State 38

   34 function_call: tok_identifier '(' • call_args ')'

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    $default  reduce using rule 35 (call_args)

    function_call  go to state 35
    call_args      go to state 66
    call_arg       go to state 67
    term           go to state 36
    expression     go to state 68


State 39

   51 assignment: tok_identifier '=' • expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 69


State 40

   16 compound_statement: '{' '}' •

    $default  reduce using rule 16 (compound_statement)


State 41

    3 statements: statements • statement
   15 compound_statement: '{' statements • '}'

    tok_printd      shift, and go to state 1
    tok_prints      shift, and go to state 2
    tok_if          shift, and go to state 3
    tok_for         shift, and go to state 4
    tok_while       shift, and go to state 5
    tok_return      shift, and go to state 6
    tok_int         shift, and go to state 7
    tok_double      shift, and go to state 8
    tok_void        shift, and go to state 9
    tok_identifier  shift, and go to state 10
    '{'             shift, and go to state 11
    '}'             shift, and go to state 70

    statement            go to state 43
    compound_statement   go to state 15
    if_statement         go to state 16
    for_statement        go to state 17
    while_statement      go to state 18
    function_definition  go to state 19
    function_call        go to state 20
    return_statement     go to state 21
    var_declaration      go to state 22
    type_specifier       go to state 23
    prints               go to state 24
    printd               go to state 25
    assignment           go to state 26


State 42

    0 $accept: program $end •

    $default  accept


State 43

    3 statements: statements statement •

    $default  reduce using rule 3 (statements)


State 44

   12 statement: function_call ';' •

    $default  reduce using rule 12 (statement)


State 45

   13 statement: return_statement ';' •

    $default  reduce using rule 13 (statement)


State 46

    7 statement: var_declaration ';' •

    $default  reduce using rule 7 (statement)


State 47

   29 function_definition: type_specifier tok_identifier • '(' param_list ')' $@7 compound_statement
   41 var_declaration: type_specifier tok_identifier •
   42                | type_specifier tok_identifier • '=' expression

    '('  shift, and go to state 71
    '='  shift, and go to state 72

    $default  reduce using rule 41 (var_declaration)


State 48

    4 statement: prints ';' •

    $default  reduce using rule 4 (statement)


State 49

    5 statement: printd ';' •

    $default  reduce using rule 5 (statement)


State 50

    6 statement: assignment ';' •

    $default  reduce using rule 6 (statement)


State 51

   47 printd: tok_printd '(' term • ')'

    ')'  shift, and go to state 73


State 52

   46 prints: tok_prints '(' tok_string_literal • ')'

    ')'  shift, and go to state 74


State 53

   57 expression: '(' • expression ')'
   67 conditional_expression: '(' • conditional_expression ')'

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 53

    function_call           go to state 35
    term                    go to state 36
    expression              go to state 75
    conditional_expression  go to state 76


State 54

   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression
   58 conditional_expression: expression •
   59                       | expression • '<' expression
   60                       | expression • '>' expression
   61                       | expression • LE expression
   62                       | expression • GE expression
   63                       | expression • EQ expression
   64                       | expression • NE expression

    LE   shift, and go to state 77
    GE   shift, and go to state 78
    EQ   shift, and go to state 79
    NE   shift, and go to state 80
    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82

    $default  reduce using rule 58 (conditional_expression)


State 55

   18 if_statement: tok_if '(' conditional_expression • ')' $@1 statement
   21             | tok_if '(' conditional_expression • ')' $@2 statement tok_else $@3 statement
   65 conditional_expression: conditional_expression • AND conditional_expression
   66                       | conditional_expression • OR conditional_expression

    AND  shift, and go to state 83
    OR   shift, and go to state 84
    ')'  shift, and go to state 85


State 56

   51 assignment: tok_identifier • '=' expression

    '='  shift, and go to state 39


State 57

   25 for_statement: tok_for '(' var_declaration • ';' conditional_expression ';' assignment ')' $@5 statement

    ';'  shift, and go to state 86


State 58

   41 var_declaration: type_specifier • tok_identifier
   42                | type_specifier • tok_identifier '=' expression

    tok_identifier  shift, and go to state 87


State 59

   23 for_statement: tok_for '(' assignment • ';' conditional_expression ';' assignment ')' $@4 statement

    ';'  shift, and go to state 88


State 60

   27 while_statement: tok_while '(' conditional_expression • ')' $@6 statement
   65 conditional_expression: conditional_expression • AND conditional_expression
   66                       | conditional_expression • OR conditional_expression

    AND  shift, and go to state 83
    OR   shift, and go to state 84
    ')'  shift, and go to state 89


State 61

   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression
   57           | '(' expression • ')'

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    ')'  shift, and go to state 90


State 62

   53 expression: expression '+' • expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 91


State 63

   54 expression: expression '-' • expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 92


State 64

   56 expression: expression '*' • expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 93


State 65

   55 expression: expression '/' • expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 94


State 66

   34 function_call: tok_identifier '(' call_args • ')'
   37 call_args: call_args • ',' call_arg

    ')'  shift, and go to state 95
    ','  shift, and go to state 96


State 67

   36 call_args: call_arg •

    $default  reduce using rule 36 (call_args)


State 68

   38 call_arg: expression •
   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65

    $default  reduce using rule 38 (call_arg)


State 69

   51 assignment: tok_identifier '=' expression •
   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65

    $default  reduce using rule 51 (assignment)


State 70

   15 compound_statement: '{' statements '}' •

    $default  reduce using rule 15 (compound_statement)


State 71

   29 function_definition: type_specifier tok_identifier '(' • param_list ')' $@7 compound_statement

    tok_int     shift, and go to state 7
    tok_double  shift, and go to state 8
    tok_void    shift, and go to state 9

    $default  reduce using rule 30 (param_list)

    param_list      go to state 97
    param           go to state 98
    type_specifier  go to state 99


State 72

   42 var_declaration: type_specifier tok_identifier '=' • expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 100


State 73

   47 printd: tok_printd '(' term ')' •

    $default  reduce using rule 47 (printd)


State 74

   46 prints: tok_prints '(' tok_string_literal ')' •

    $default  reduce using rule 46 (prints)


State 75

   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression
   57           | '(' expression • ')'
   58 conditional_expression: expression •
   59                       | expression • '<' expression
   60                       | expression • '>' expression
   61                       | expression • LE expression
   62                       | expression • GE expression
   63                       | expression • EQ expression
   64                       | expression • NE expression

    LE   shift, and go to state 77
    GE   shift, and go to state 78
    EQ   shift, and go to state 79
    NE   shift, and go to state 80
    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    '<'  shift, and go to state 81
    '>'  shift, and go to state 82
    ')'  shift, and go to state 90

    ')'       [reduce using rule 58 (conditional_expression)]
    $default  reduce using rule 58 (conditional_expression)

    shift/reduce conflict on token ')':
       58 conditional_expression: expression •
       57 expression: '(' expression • ')'
      Example: '(' expression • ')'
      Shift derivation
        conditional_expression
        ↳ 58: expression
              ↳ 57: '(' expression • ')'
      Reduce derivation
        conditional_expression
        ↳ 67: '(' conditional_expression ')'
                  ↳ 58: expression •



State 76

   65 conditional_expression: conditional_expression • AND conditional_expression
   66                       | conditional_expression • OR conditional_expression
   67                       | '(' conditional_expression • ')'

    AND  shift, and go to state 83
    OR   shift, and go to state 84
    ')'  shift, and go to state 101


State 77

   61 conditional_expression: expression LE • expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 102


State 78

   62 conditional_expression: expression GE • expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 103


State 79

   63 conditional_expression: expression EQ • expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 104


State 80

   64 conditional_expression: expression NE • expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 105


State 81

   59 conditional_expression: expression '<' • expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 106


State 82

   60 conditional_expression: expression '>' • expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    term           go to state 36
    expression     go to state 107


State 83

   65 conditional_expression: conditional_expression AND • conditional_expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 53

    function_call           go to state 35
    term                    go to state 36
    expression              go to state 54
    conditional_expression  go to state 108


State 84

   66 conditional_expression: conditional_expression OR • conditional_expression

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 53

    function_call           go to state 35
    term                    go to state 36
    expression              go to state 54
    conditional_expression  go to state 109


State 85

   18 if_statement: tok_if '(' conditional_expression ')' • $@1 statement
   21             | tok_if '(' conditional_expression ')' • $@2 statement tok_else $@3 statement

    tok_printd      reduce using rule 17 ($@1)
    tok_printd      [reduce using rule 19 ($@2)]
    tok_prints      reduce using rule 17 ($@1)
    tok_prints      [reduce using rule 19 ($@2)]
    tok_if          reduce using rule 17 ($@1)
    tok_if          [reduce using rule 19 ($@2)]
    tok_for         reduce using rule 17 ($@1)
    tok_for         [reduce using rule 19 ($@2)]
    tok_while       reduce using rule 17 ($@1)
    tok_while       [reduce using rule 19 ($@2)]
    tok_return      reduce using rule 17 ($@1)
    tok_return      [reduce using rule 19 ($@2)]
    tok_int         reduce using rule 17 ($@1)
    tok_int         [reduce using rule 19 ($@2)]
    tok_double      reduce using rule 17 ($@1)
    tok_double      [reduce using rule 19 ($@2)]
    tok_void        reduce using rule 17 ($@1)
    tok_void        [reduce using rule 19 ($@2)]
    tok_identifier  reduce using rule 17 ($@1)
    tok_identifier  [reduce using rule 19 ($@2)]
    '{'             reduce using rule 17 ($@1)
    '{'             [reduce using rule 19 ($@2)]
    $default        reduce using rule 17 ($@1)

    $@1  go to state 110
    $@2  go to state 111

    reduce/reduce conflict on tokens tok_printd, tok_prints, tok_if, tok_for, tok_while, tok_return, tok_int, tok_double, tok_void, tok_identifier, '{':
       17 $@1: ε •
       19 $@2: ε •
      First example: tok_if '(' conditional_expression ')' • tok_printd '(' term ')' ';' $end
      First reduce derivation
        $accept
        ↳ 0: program                                                                                                     $end
             ↳ 1: statements
                  ↳ 2: statement
                       ↳ 8: if_statement
                            ↳ 18: tok_if '(' conditional_expression ')' $@1       statement
                                                                        ↳ 17: ε • ↳ 5: printd                        ';'
                                                                                       ↳ 47: tok_printd '(' term ')'
      Second example: tok_if '(' conditional_expression ')' • tok_printd '(' term ')' ';' tok_else $@3 statement $end
      Second reduce derivation
        $accept
        ↳ 0: program                                                                                                                            $end
             ↳ 1: statements
                  ↳ 2: statement
                       ↳ 8: if_statement
                            ↳ 21: tok_if '(' conditional_expression ')' $@2       statement                              tok_else $@3 statement
                                                                        ↳ 19: ε • ↳ 5: printd                        ';'
                                                                                       ↳ 47: tok_printd '(' term ')'



State 86

   25 for_statement: tok_for '(' var_declaration ';' • conditional_expression ';' assignment ')' $@5 statement

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 53

    function_call           go to state 35
    term                    go to state 36
    expression              go to state 54
    conditional_expression  go to state 112


State 87

   41 var_declaration: type_specifier tok_identifier •
   42                | type_specifier tok_identifier • '=' expression

    '='  shift, and go to state 72

    $default  reduce using rule 41 (var_declaration)


State 88

   23 for_statement: tok_for '(' assignment ';' • conditional_expression ';' assignment ')' $@4 statement

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 53

    function_call           go to state 35
    term                    go to state 36
    expression              go to state 54
    conditional_expression  go to state 113


State 89

   27 while_statement: tok_while '(' conditional_expression ')' • $@6 statement

    $default  reduce using rule 26 ($@6)

    $@6  go to state 114


State 90

   57 expression: '(' expression ')' •

    $default  reduce using rule 57 (expression)


State 91

   53 expression: expression • '+' expression
   53           | expression '+' expression •
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression

    '*'  shift, and go to state 64
    '/'  shift, and go to state 65

    $default  reduce using rule 53 (expression)


State 92

   53 expression: expression • '+' expression
   54           | expression • '-' expression
   54           | expression '-' expression •
   55           | expression • '/' expression
   56           | expression • '*' expression

    '*'  shift, and go to state 64
    '/'  shift, and go to state 65

    $default  reduce using rule 54 (expression)


State 93

   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression
   56           | expression '*' expression •

    $default  reduce using rule 56 (expression)


State 94

   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   55           | expression '/' expression •
   56           | expression • '*' expression

    $default  reduce using rule 55 (expression)


State 95

   34 function_call: tok_identifier '(' call_args ')' •

    $default  reduce using rule 34 (function_call)


State 96

   37 call_args: call_args ',' • call_arg

    tok_identifier      shift, and go to state 32
    tok_double_literal  shift, and go to state 33
    '('                 shift, and go to state 34

    function_call  go to state 35
    call_arg       go to state 115
    term           go to state 36
    expression     go to state 68


State 97

   29 function_definition: type_specifier tok_identifier '(' param_list • ')' $@7 compound_statement
   32 param_list: param_list • ',' param

    ')'  shift, and go to state 116
    ','  shift, and go to state 117


State 98

   31 param_list: param •

    $default  reduce using rule 31 (param_list)


State 99

   33 param: type_specifier • tok_identifier

    tok_identifier  shift, and go to state 118


State 100

   42 var_declaration: type_specifier tok_identifier '=' expression •
   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65

    $default  reduce using rule 42 (var_declaration)


State 101

   67 conditional_expression: '(' conditional_expression ')' •

    $default  reduce using rule 67 (conditional_expression)


State 102

   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression
   61 conditional_expression: expression LE expression •

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65

    $default  reduce using rule 61 (conditional_expression)


State 103

   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression
   62 conditional_expression: expression GE expression •

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65

    $default  reduce using rule 62 (conditional_expression)


State 104

   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression
   63 conditional_expression: expression EQ expression •

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65

    $default  reduce using rule 63 (conditional_expression)


State 105

   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression
   64 conditional_expression: expression NE expression •

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65

    $default  reduce using rule 64 (conditional_expression)


State 106

   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression
   59 conditional_expression: expression '<' expression •

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65

    $default  reduce using rule 59 (conditional_expression)


State 107

   53 expression: expression • '+' expression
   54           | expression • '-' expression
   55           | expression • '/' expression
   56           | expression • '*' expression
   60 conditional_expression: expression '>' expression •

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65

    $default  reduce using rule 60 (conditional_expression)


State 108

   65 conditional_expression: conditional_expression • AND conditional_expression
   65                       | conditional_expression AND conditional_expression •
   66                       | conditional_expression • OR conditional_expression

    $default  reduce using rule 65 (conditional_expression)


State 109

   65 conditional_expression: conditional_expression • AND conditional_expression
   66                       | conditional_expression • OR conditional_expression
   66                       | conditional_expression OR conditional_expression •

    $default  reduce using rule 66 (conditional_expression)


State 110

   18 if_statement: tok_if '(' conditional_expression ')' $@1 • statement

    tok_printd      shift, and go to state 1
    tok_prints      shift, and go to state 2
    tok_if          shift, and go to state 3
    tok_for         shift, and go to state 4
    tok_while       shift, and go to state 5
    tok_return      shift, and go to state 6
    tok_int         shift, and go to state 7
    tok_double      shift, and go to state 8
    tok_void        shift, and go to state 9
    tok_identifier  shift, and go to state 10
    '{'             shift, and go to state 11

    statement            go to state 119
    compound_statement   go to state 15
    if_statement         go to state 16
    for_statement        go to state 17
    while_statement      go to state 18
    function_definition  go to state 19
    function_call        go to state 20
    return_statement     go to state 21
    var_declaration      go to state 22
    type_specifier       go to state 23
    prints               go to state 24
    printd               go to state 25
    assignment           go to state 26


State 111

   21 if_statement: tok_if '(' conditional_expression ')' $@2 • statement tok_else $@3 statement

    tok_printd      shift, and go to state 1
    tok_prints      shift, and go to state 2
    tok_if          shift, and go to state 3
    tok_for         shift, and go to state 4
    tok_while       shift, and go to state 5
    tok_return      shift, and go to state 6
    tok_int         shift, and go to state 7
    tok_double      shift, and go to state 8
    tok_void        shift, and go to state 9
    tok_identifier  shift, and go to state 10
    '{'             shift, and go to state 11

    statement            go to state 120
    compound_statement   go to state 15
    if_statement         go to state 16
    for_statement        go to state 17
    while_statement      go to state 18
    function_definition  go to state 19
    function_call        go to state 20
    return_statement     go to state 21
    var_declaration      go to state 22
    type_specifier       go to state 23
    prints               go to state 24
    printd               go to state 25
    assignment           go to state 26


State 112

   25 for_statement: tok_for '(' var_declaration ';' conditional_expression • ';' assignment ')' $@5 statement
   65 conditional_expression: conditional_expression • AND conditional_expression
   66                       | conditional_expression • OR conditional_expression

    AND  shift, and go to state 83
    OR   shift, and go to state 84
    ';'  shift, and go to state 121


State 113

   23 for_statement: tok_for '(' assignment ';' conditional_expression • ';' assignment ')' $@4 statement
   65 conditional_expression: conditional_expression • AND conditional_expression
   66                       | conditional_expression • OR conditional_expression

    AND  shift, and go to state 83
    OR   shift, and go to state 84
    ';'  shift, and go to state 122


State 114

   27 while_statement: tok_while '(' conditional_expression ')' $@6 • statement

    tok_printd      shift, and go to state 1
    tok_prints      shift, and go to state 2
    tok_if          shift, and go to state 3
    tok_for         shift, and go to state 4
    tok_while       shift, and go to state 5
    tok_return      shift, and go to state 6
    tok_int         shift, and go to state 7
    tok_double      shift, and go to state 8
    tok_void        shift, and go to state 9
    tok_identifier  shift, and go to state 10
    '{'             shift, and go to state 11

    statement            go to state 123
    compound_statement   go to state 15
    if_statement         go to state 16
    for_statement        go to state 17
    while_statement      go to state 18
    function_definition  go to state 19
    function_call        go to state 20
    return_statement     go to state 21
    var_declaration      go to state 22
    type_specifier       go to state 23
    prints               go to state 24
    printd               go to state 25
    assignment           go to state 26


State 115

   37 call_args: call_args ',' call_arg •

    $default  reduce using rule 37 (call_args)


State 116

   29 function_definition: type_specifier tok_identifier '(' param_list ')' • $@7 compound_statement

    $default  reduce using rule 28 ($@7)

    $@7  go to state 124


State 117

   32 param_list: param_list ',' • param

    tok_int     shift, and go to state 7
    tok_double  shift, and go to state 8
    tok_void    shift, and go to state 9

    param           go to state 125
    type_specifier  go to state 99


State 118

   33 param: type_specifier tok_identifier •

    $default  reduce using rule 33 (param)


State 119

   18 if_statement: tok_if '(' conditional_expression ')' $@1 statement •

    $default  reduce using rule 18 (if_statement)


State 120

   21 if_statement: tok_if '(' conditional_expression ')' $@2 statement • tok_else $@3 statement

    tok_else  shift, and go to state 126


State 121

   25 for_statement: tok_for '(' var_declaration ';' conditional_expression ';' • assignment ')' $@5 statement

    tok_identifier  shift, and go to state 56

    assignment  go to state 127


State 122

   23 for_statement: tok_for '(' assignment ';' conditional_expression ';' • assignment ')' $@4 statement

    tok_identifier  shift, and go to state 56

    assignment  go to state 128


State 123

   27 while_statement: tok_while '(' conditional_expression ')' $@6 statement •

    $default  reduce using rule 27 (while_statement)


State 124

   29 function_definition: type_specifier tok_identifier '(' param_list ')' $@7 • compound_statement

    '{'  shift, and go to state 11

    compound_statement  go to state 129


State 125

   32 param_list: param_list ',' param •

    $default  reduce using rule 32 (param_list)


State 126

   21 if_statement: tok_if '(' conditional_expression ')' $@2 statement tok_else • $@3 statement

    $default  reduce using rule 20 ($@3)

    $@3  go to state 130


State 127

   25 for_statement: tok_for '(' var_declaration ';' conditional_expression ';' assignment • ')' $@5 statement

    ')'  shift, and go to state 131


State 128

   23 for_statement: tok_for '(' assignment ';' conditional_expression ';' assignment • ')' $@4 statement

    ')'  shift, and go to state 132


State 129

   29 function_definition: type_specifier tok_identifier '(' param_list ')' $@7 compound_statement •

    $default  reduce using rule 29 (function_definition)


State 130

   21 if_statement: tok_if '(' conditional_expression ')' $@2 statement tok_else $@3 • statement

    tok_printd      shift, and go to state 1
    tok_prints      shift, and go to state 2
    tok_if          shift, and go to state 3
    tok_for         shift, and go to state 4
    tok_while       shift, and go to state 5
    tok_return      shift, and go to state 6
    tok_int         shift, and go to state 7
    tok_double      shift, and go to state 8
    tok_void        shift, and go to state 9
    tok_identifier  shift, and go to state 10
    '{'             shift, and go to state 11

    statement            go to state 133
    compound_statement   go to state 15
    if_statement         go to state 16
    for_statement        go to state 17
    while_statement      go to state 18
    function_definition  go to state 19
    function_call        go to state 20
    return_statement     go to state 21
    var_declaration      go to state 22
    type_specifier       go to state 23
    prints               go to state 24
    printd               go to state 25
    assignment           go to state 26


State 131

   25 for_statement: tok_for '(' var_declaration ';' conditional_expression ';' assignment ')' • $@5 statement

    $default  reduce using rule 24 ($@5)

    $@5  go to state 134


State 132

   23 for_statement: tok_for '(' assignment ';' conditional_expression ';' assignment ')' • $@4 statement

    $default  reduce using rule 22 ($@4)

    $@4  go to state 135


State 133

   21 if_statement: tok_if '(' conditional_expression ')' $@2 statement tok_else $@3 statement •

    $default  reduce using rule 21 (if_statement)


State 134

   25 for_statement: tok_for '(' var_declaration ';' conditional_expression ';' assignment ')' $@5 • statement

    tok_printd      shift, and go to state 1
    tok_prints      shift, and go to state 2
    tok_if          shift, and go to state 3
    tok_for         shift, and go to state 4
    tok_while       shift, and go to state 5
    tok_return      shift, and go to state 6
    tok_int         shift, and go to state 7
    tok_double      shift, and go to state 8
    tok_void        shift, and go to state 9
    tok_identifier  shift, and go to state 10
    '{'             shift, and go to state 11

    statement            go to state 136
    compound_statement   go to state 15
    if_statement         go to state 16
    for_statement        go to state 17
    while_statement      go to state 18
    function_definition  go to state 19
    function_call        go to state 20
    return_statement     go to state 21
    var_declaration      go to state 22
    type_specifier       go to state 23
    prints               go to state 24
    printd               go to state 25
    assignment           go to state 26


State 135

   23 for_statement: tok_for '(' assignment ';' conditional_expression ';' assignment ')' $@4 • statement

    tok_printd      shift, and go to state 1
    tok_prints      shift, and go to state 2
    tok_if          shift, and go to state 3
    tok_for         shift, and go to state 4
    tok_while       shift, and go to state 5
    tok_return      shift, and go to state 6
    tok_int         shift, and go to state 7
    tok_double      shift, and go to state 8
    tok_void        shift, and go to state 9
    tok_identifier  shift, and go to state 10
    '{'             shift, and go to state 11

    statement            go to state 137
    compound_statement   go to state 15
    if_statement         go to state 16
    for_statement        go to state 17
    while_statement      go to state 18
    function_definition  go to state 19
    function_call        go to state 20
    return_statement     go to state 21
    var_declaration      go to state 22
    type_specifier       go to state 23
    prints               go to state 24
    printd               go to state 25
    assignment           go to state 26


State 136

   25 for_statement: tok_for '(' var_declaration ';' conditional_expression ';' assignment ')' $@5 statement •

    $default  reduce using rule 25 (for_statement)


State 137

   23 for_statement: tok_for '(' assignment ';' conditional_expression ';' assignment ')' $@4 statement •

    $default  reduce using rule 23 (for_statement)
